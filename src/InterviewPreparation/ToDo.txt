things need to learn:
-----------------------
𝟏. 𝐂𝐨𝐦𝐩𝐨𝐧𝐞𝐧𝐭𝐬
 - Functional Components
𝟐. 𝐏𝐫𝐨𝐩𝐬 (𝐏𝐫𝐨𝐩𝐞𝐫𝐭𝐢𝐞𝐬)
 - Passing Props
 - Default Props
 - Prop Types
𝟑. 𝐒𝐭𝐚𝐭𝐞
 - useState Hook
 - Immutable State
𝟓. 𝐇𝐨𝐨𝐤𝐬 (𝐅𝐮𝐧𝐜𝐭𝐢𝐨𝐧𝐚𝐥 𝐂𝐨𝐦𝐩𝐨𝐧𝐞𝐧𝐭𝐬)
 - useState
 - useEffect
 - useContext
 - useReducer
 - useCallback
 - useMemo
 - useRef
 - useImperativeHandle
 - useLayoutEffect
𝟔. 𝐄𝐯𝐞𝐧𝐭 𝐇𝐚𝐧𝐝𝐥𝐢𝐧𝐠
 - Handling Events in Functional Components
𝟕. 𝐂𝐨𝐧𝐝𝐢𝐭𝐢𝐨𝐧𝐚𝐥 𝐑𝐞𝐧𝐝𝐞𝐫𝐢𝐧𝐠
 - if Statements
 - Ternary Operators
 - Logical && Operator
𝟖. Iterating using map
𝟗. 𝐂𝐨𝐦𝐩𝐨𝐧𝐞𝐧𝐭 𝐂𝐨𝐦𝐩𝐨𝐬𝐢𝐭𝐢𝐨𝐧
 - Reusing Components
 - Children Props
 - Composition vs Inheritance
𝟏𝟎. 𝐇𝐢𝐠𝐡𝐞𝐫-𝐎𝐫𝐝𝐞𝐫 𝐂𝐨𝐦𝐩𝐨𝐧𝐞𝐧𝐭𝐬 (𝐇𝐎𝐂)
 - Creating HOCs
 - Using HOCs for Reusability
𝟏𝟏. 𝐑𝐞𝐧𝐝𝐞𝐫 𝐏𝐫𝐨𝐩𝐬
 - Using Render Props Pattern
𝟏𝟐. 𝐑𝐞𝐚𝐜𝐭 𝐑𝐨𝐮𝐭𝐞𝐫
 - <BrowserRouter>
 - <Route>
 - <Link>
 - <Switch>
 - Route Parameters
𝟏𝟑. 𝐍𝐚𝐯𝐢𝐠𝐚𝐭𝐢𝐨𝐧
 - useHistory Hook
 - useLocation Hook

𝐒𝐭𝐚𝐭𝐞 𝐌𝐚𝐧𝐚𝐠𝐞𝐦𝐞𝐧𝐭
𝟏𝟒. 𝐂𝐨𝐧𝐭𝐞𝐱𝐭 𝐀𝐏𝐈
 - Creating Context
 - useContext Hook
𝟏𝟓. 𝐑𝐞𝐝𝐮𝐱
 - Actions
 - Reducers
 - Store
𝟏𝟔. 𝐅𝐨𝐫𝐦𝐬
 - Handling Form Data
 - Controlled Components
 - Uncontrolled Components
𝟏𝟕. 𝐒𝐢𝐝𝐞 𝐄𝐟𝐟𝐞𝐜𝐭𝐬
 - useEffect for Data Fetching
 - useEffect Cleanup
𝟏𝟖. 𝐀𝐉𝐀𝐗 𝐑𝐞𝐪𝐮𝐞𝐬𝐭𝐬
 - Axios Library

𝐄𝐫𝐫𝐨𝐫 𝐇𝐚𝐧𝐝𝐥𝐢𝐧𝐠
𝟏𝟗. 𝐄𝐫𝐫𝐨𝐫 𝐁𝐨𝐮𝐧𝐝𝐚𝐫𝐢𝐞𝐬 
 - componentDidCatch (Class Components)
 - ErrorBoundary Component (Functional Components)
𝟐𝟏. 𝐎𝐩𝐭𝐢𝐦𝐢𝐳𝐚𝐭𝐢𝐨𝐧 
 - Memoization
 - Profiling and Performance Monitoring


class components (No Need to learn)
server side rendering vs client side rendering definitions ?
what is single page application ?
what is jsx ?
pure components?
explain stopPropagation() and preventDefault()?
what is Higher order components, children prop?
stateless components, stateful components
How do you memoize a component?
render props, higher order components?
what is strict mode?
---------------------
strict mode runs the application twice. this is for debugging purpose.
for actual build in production, it will run only once.

props are immutable in any language. it means you should not change props.
if you destructure the props to another variable and changed that variable value.  (this doesn't means you changed props)
 but props are immutable.

 Pro tip:
 ---------
always use arrow functions only. (for both class components, functional components)